// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: tshparser.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Standing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName        string  `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Points            int32   `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	Wins              float64 `protobuf:"fixed64,3,opt,name=wins,proto3" json:"wins,omitempty"`
	Games             int32   `protobuf:"varint,4,opt,name=games,proto3" json:"games,omitempty"`
	Spread            int32   `protobuf:"varint,5,opt,name=spread,proto3" json:"spread,omitempty"`
	TournamentsPlayed int32   `protobuf:"varint,6,opt,name=tournaments_played,json=tournamentsPlayed,proto3" json:"tournaments_played,omitempty"`
	Rank              int32   `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *Standing) Reset() {
	*x = Standing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Standing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Standing) ProtoMessage() {}

func (x *Standing) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Standing.ProtoReflect.Descriptor instead.
func (*Standing) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{0}
}

func (x *Standing) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *Standing) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Standing) GetWins() float64 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *Standing) GetGames() int32 {
	if x != nil {
		return x.Games
	}
	return 0
}

func (x *Standing) GetSpread() int32 {
	if x != nil {
		return x.Spread
	}
	return 0
}

func (x *Standing) GetTournamentsPlayed() int32 {
	if x != nil {
		return x.TournamentsPlayed
	}
	return 0
}

func (x *Standing) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type Tournament struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TournamentType string      `protobuf:"bytes,2,opt,name=tournament_type,json=tournamentType,proto3" json:"tournament_type,omitempty"`
	Name           string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Date           string      `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"` // RFC3339 format
	TfileContents  []byte      `protobuf:"bytes,5,opt,name=tfile_contents,json=tfileContents,proto3" json:"tfile_contents,omitempty"`
	Standings      []*Standing `protobuf:"bytes,6,rep,name=standings,proto3" json:"standings,omitempty"`
}

func (x *Tournament) Reset() {
	*x = Tournament{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tournament) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tournament) ProtoMessage() {}

func (x *Tournament) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tournament.ProtoReflect.Descriptor instead.
func (*Tournament) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{1}
}

func (x *Tournament) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tournament) GetTournamentType() string {
	if x != nil {
		return x.TournamentType
	}
	return ""
}

func (x *Tournament) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tournament) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Tournament) GetTfileContents() []byte {
	if x != nil {
		return x.TfileContents
	}
	return nil
}

func (x *Tournament) GetStandings() []*Standing {
	if x != nil {
		return x.Standings
	}
	return nil
}

type PlayerAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalPlayer string `protobuf:"bytes,1,opt,name=original_player,json=originalPlayer,proto3" json:"original_player,omitempty"`
	Alias          string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *PlayerAlias) Reset() {
	*x = PlayerAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAlias) ProtoMessage() {}

func (x *PlayerAlias) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAlias.ProtoReflect.Descriptor instead.
func (*PlayerAlias) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerAlias) GetOriginalPlayer() string {
	if x != nil {
		return x.OriginalPlayer
	}
	return ""
}

func (x *PlayerAlias) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type AddTournamentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date           string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TournamentType string `protobuf:"bytes,3,opt,name=tournament_type,json=tournamentType,proto3" json:"tournament_type,omitempty"`
	TshUrl         string `protobuf:"bytes,4,opt,name=tsh_url,json=tshUrl,proto3" json:"tsh_url,omitempty"`
}

func (x *AddTournamentRequest) Reset() {
	*x = AddTournamentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTournamentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTournamentRequest) ProtoMessage() {}

func (x *AddTournamentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTournamentRequest.ProtoReflect.Descriptor instead.
func (*AddTournamentRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{3}
}

func (x *AddTournamentRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AddTournamentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddTournamentRequest) GetTournamentType() string {
	if x != nil {
		return x.TournamentType
	}
	return ""
}

func (x *AddTournamentRequest) GetTshUrl() string {
	if x != nil {
		return x.TshUrl
	}
	return ""
}

type AddTournamentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddTournamentResponse) Reset() {
	*x = AddTournamentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTournamentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTournamentResponse) ProtoMessage() {}

func (x *AddTournamentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTournamentResponse.ProtoReflect.Descriptor instead.
func (*AddTournamentResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{4}
}

func (x *AddTournamentResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveTournamentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveTournamentRequest) Reset() {
	*x = RemoveTournamentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTournamentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTournamentRequest) ProtoMessage() {}

func (x *RemoveTournamentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTournamentRequest.ProtoReflect.Descriptor instead.
func (*RemoveTournamentRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveTournamentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveTournamentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveTournamentResponse) Reset() {
	*x = RemoveTournamentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTournamentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTournamentResponse) ProtoMessage() {}

func (x *RemoveTournamentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTournamentResponse.ProtoReflect.Descriptor instead.
func (*RemoveTournamentResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{6}
}

type ComputeStandingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginDate string `protobuf:"bytes,1,opt,name=begin_date,json=beginDate,proto3" json:"begin_date,omitempty"`
	EndDate   string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *ComputeStandingsRequest) Reset() {
	*x = ComputeStandingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeStandingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeStandingsRequest) ProtoMessage() {}

func (x *ComputeStandingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeStandingsRequest.ProtoReflect.Descriptor instead.
func (*ComputeStandingsRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{7}
}

func (x *ComputeStandingsRequest) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *ComputeStandingsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type StandingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Standings []*Standing `protobuf:"bytes,1,rep,name=standings,proto3" json:"standings,omitempty"`
}

func (x *StandingsResponse) Reset() {
	*x = StandingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandingsResponse) ProtoMessage() {}

func (x *StandingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandingsResponse.ProtoReflect.Descriptor instead.
func (*StandingsResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{8}
}

func (x *StandingsResponse) GetStandings() []*Standing {
	if x != nil {
		return x.Standings
	}
	return nil
}

type GetTournamentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginDate string `protobuf:"bytes,1,opt,name=begin_date,json=beginDate,proto3" json:"begin_date,omitempty"`
	EndDate   string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetTournamentsRequest) Reset() {
	*x = GetTournamentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTournamentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTournamentsRequest) ProtoMessage() {}

func (x *GetTournamentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTournamentsRequest.ProtoReflect.Descriptor instead.
func (*GetTournamentsRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{9}
}

func (x *GetTournamentsRequest) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *GetTournamentsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type TournamentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tournaments []*Tournament `protobuf:"bytes,1,rep,name=tournaments,proto3" json:"tournaments,omitempty"`
}

func (x *TournamentsResponse) Reset() {
	*x = TournamentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentsResponse) ProtoMessage() {}

func (x *TournamentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentsResponse.ProtoReflect.Descriptor instead.
func (*TournamentsResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{10}
}

func (x *TournamentsResponse) GetTournaments() []*Tournament {
	if x != nil {
		return x.Tournaments
	}
	return nil
}

type TournamentsForPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameOrAlias string `protobuf:"bytes,1,opt,name=name_or_alias,json=nameOrAlias,proto3" json:"name_or_alias,omitempty"`
}

func (x *TournamentsForPlayerRequest) Reset() {
	*x = TournamentsForPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentsForPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentsForPlayerRequest) ProtoMessage() {}

func (x *TournamentsForPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentsForPlayerRequest.ProtoReflect.Descriptor instead.
func (*TournamentsForPlayerRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{11}
}

func (x *TournamentsForPlayerRequest) GetNameOrAlias() string {
	if x != nil {
		return x.NameOrAlias
	}
	return ""
}

type AddPlayerAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPlayerAliasResponse) Reset() {
	*x = AddPlayerAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayerAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerAliasResponse) ProtoMessage() {}

func (x *AddPlayerAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerAliasResponse.ProtoReflect.Descriptor instead.
func (*AddPlayerAliasResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{12}
}

type RemovePlayerAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *RemovePlayerAliasRequest) Reset() {
	*x = RemovePlayerAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerAliasRequest) ProtoMessage() {}

func (x *RemovePlayerAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerAliasRequest.ProtoReflect.Descriptor instead.
func (*RemovePlayerAliasRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{13}
}

func (x *RemovePlayerAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type RemovePlayerAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePlayerAliasResponse) Reset() {
	*x = RemovePlayerAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerAliasResponse) ProtoMessage() {}

func (x *RemovePlayerAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerAliasResponse.ProtoReflect.Descriptor instead.
func (*RemovePlayerAliasResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{14}
}

type ListPlayerAliasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPlayerAliasesRequest) Reset() {
	*x = ListPlayerAliasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlayerAliasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayerAliasesRequest) ProtoMessage() {}

func (x *ListPlayerAliasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayerAliasesRequest.ProtoReflect.Descriptor instead.
func (*ListPlayerAliasesRequest) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{15}
}

type PlayerAliasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases []*PlayerAlias `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
}

func (x *PlayerAliasesResponse) Reset() {
	*x = PlayerAliasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tshparser_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAliasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAliasesResponse) ProtoMessage() {}

func (x *PlayerAliasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tshparser_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAliasesResponse.ProtoReflect.Descriptor instead.
func (*PlayerAliasesResponse) Descriptor() ([]byte, []int) {
	return file_tshparser_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerAliasesResponse) GetAliases() []*PlayerAlias {
	if x != nil {
		return x.Aliases
	}
	return nil
}

var File_tshparser_proto protoreflect.FileDescriptor

var file_tshparser_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x22, 0xc8, 0x01, 0x0a,
	0x08, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xc7, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x4c, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22,
	0x80, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x73, 0x68,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x73, 0x68, 0x55,
	0x72, 0x6c, 0x22, 0x27, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x53, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x4e, 0x0a, 0x13, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x74, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x41, 0x0a, 0x1b, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x72,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x30, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x07, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x65, 0x73, 0x32, 0xfd, 0x04, 0x0a, 0x17, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x52, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x73, 0x68, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x73, 0x68,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x74, 0x73, 0x68,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74,
	0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16,
	0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x1a, 0x21, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x23,
	0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x23,
	0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x73, 0x68, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x31, 0x34, 0x2f, 0x74, 0x73, 0x68,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tshparser_proto_rawDescOnce sync.Once
	file_tshparser_proto_rawDescData = file_tshparser_proto_rawDesc
)

func file_tshparser_proto_rawDescGZIP() []byte {
	file_tshparser_proto_rawDescOnce.Do(func() {
		file_tshparser_proto_rawDescData = protoimpl.X.CompressGZIP(file_tshparser_proto_rawDescData)
	})
	return file_tshparser_proto_rawDescData
}

var file_tshparser_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_tshparser_proto_goTypes = []interface{}{
	(*Standing)(nil),                    // 0: tshparser.Standing
	(*Tournament)(nil),                  // 1: tshparser.Tournament
	(*PlayerAlias)(nil),                 // 2: tshparser.PlayerAlias
	(*AddTournamentRequest)(nil),        // 3: tshparser.AddTournamentRequest
	(*AddTournamentResponse)(nil),       // 4: tshparser.AddTournamentResponse
	(*RemoveTournamentRequest)(nil),     // 5: tshparser.RemoveTournamentRequest
	(*RemoveTournamentResponse)(nil),    // 6: tshparser.RemoveTournamentResponse
	(*ComputeStandingsRequest)(nil),     // 7: tshparser.ComputeStandingsRequest
	(*StandingsResponse)(nil),           // 8: tshparser.StandingsResponse
	(*GetTournamentsRequest)(nil),       // 9: tshparser.GetTournamentsRequest
	(*TournamentsResponse)(nil),         // 10: tshparser.TournamentsResponse
	(*TournamentsForPlayerRequest)(nil), // 11: tshparser.TournamentsForPlayerRequest
	(*AddPlayerAliasResponse)(nil),      // 12: tshparser.AddPlayerAliasResponse
	(*RemovePlayerAliasRequest)(nil),    // 13: tshparser.RemovePlayerAliasRequest
	(*RemovePlayerAliasResponse)(nil),   // 14: tshparser.RemovePlayerAliasResponse
	(*ListPlayerAliasesRequest)(nil),    // 15: tshparser.ListPlayerAliasesRequest
	(*PlayerAliasesResponse)(nil),       // 16: tshparser.PlayerAliasesResponse
}
var file_tshparser_proto_depIdxs = []int32{
	0,  // 0: tshparser.Tournament.standings:type_name -> tshparser.Standing
	0,  // 1: tshparser.StandingsResponse.standings:type_name -> tshparser.Standing
	1,  // 2: tshparser.TournamentsResponse.tournaments:type_name -> tshparser.Tournament
	2,  // 3: tshparser.PlayerAliasesResponse.aliases:type_name -> tshparser.PlayerAlias
	3,  // 4: tshparser.TournamentRankerService.AddTournament:input_type -> tshparser.AddTournamentRequest
	5,  // 5: tshparser.TournamentRankerService.RemoveTournament:input_type -> tshparser.RemoveTournamentRequest
	7,  // 6: tshparser.TournamentRankerService.ComputeStandings:input_type -> tshparser.ComputeStandingsRequest
	9,  // 7: tshparser.TournamentRankerService.GetTournaments:input_type -> tshparser.GetTournamentsRequest
	2,  // 8: tshparser.TournamentRankerService.AddPlayerAlias:input_type -> tshparser.PlayerAlias
	13, // 9: tshparser.TournamentRankerService.RemovePlayerAlias:input_type -> tshparser.RemovePlayerAliasRequest
	15, // 10: tshparser.TournamentRankerService.ListPlayerAliases:input_type -> tshparser.ListPlayerAliasesRequest
	4,  // 11: tshparser.TournamentRankerService.AddTournament:output_type -> tshparser.AddTournamentResponse
	6,  // 12: tshparser.TournamentRankerService.RemoveTournament:output_type -> tshparser.RemoveTournamentResponse
	8,  // 13: tshparser.TournamentRankerService.ComputeStandings:output_type -> tshparser.StandingsResponse
	10, // 14: tshparser.TournamentRankerService.GetTournaments:output_type -> tshparser.TournamentsResponse
	12, // 15: tshparser.TournamentRankerService.AddPlayerAlias:output_type -> tshparser.AddPlayerAliasResponse
	14, // 16: tshparser.TournamentRankerService.RemovePlayerAlias:output_type -> tshparser.RemovePlayerAliasResponse
	16, // 17: tshparser.TournamentRankerService.ListPlayerAliases:output_type -> tshparser.PlayerAliasesResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_tshparser_proto_init() }
func file_tshparser_proto_init() {
	if File_tshparser_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tshparser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Standing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tournament); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTournamentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTournamentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTournamentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTournamentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeStandingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTournamentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentsForPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayerAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlayerAliasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tshparser_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAliasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tshparser_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tshparser_proto_goTypes,
		DependencyIndexes: file_tshparser_proto_depIdxs,
		MessageInfos:      file_tshparser_proto_msgTypes,
	}.Build()
	File_tshparser_proto = out.File
	file_tshparser_proto_rawDesc = nil
	file_tshparser_proto_goTypes = nil
	file_tshparser_proto_depIdxs = nil
}
